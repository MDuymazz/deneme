name: Run Python Scripts and Push to Private Repo (Py)

on:
  schedule:
    - cron: '0 */1 * * *'  # Workflow her saat başı çalışacak
  workflow_dispatch:  # Manuel tetikleme imkanı da sağlıyoruz

jobs:
  update-m3u:
    runs-on: ubuntu-latest  # Workflow Ubuntu ortamında çalışacak

    steps:
      # 1. Ana repoyu çekiyoruz
      - name: Checkout main repository
        uses: actions/checkout@v4  # Ana repo üzerinden işlem yapacağız

      # 2. Python kurulumu
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Python 3.10 versiyonu

      # 3. Gerekli Python bağımlılıklarını yüklüyoruz
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4
          pip install playwright
          pip install bs4
          pip install lxml
          playwright install  # Playwright gereksinimlerini kuruyoruz

      # 4. Python scriptini çalıştırıyoruz (event.m3u dosyasını oluşturuyoruz)
      - name: Run extraction script
        run: python d/livejson.py  # Veriyi çıkaran Python betiği

      # 5. Private repo'yu GH_TOKEN ile klonluyoruz ve Push işlemi için yapılandırıyoruz
      - name: Clone Private Repository (Py)
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/MDuymazz/Py.git
          cd Py

      # 6. Diğer Python Scriptlerini Çalıştırıyoruz
      - name: Run schedule_aljson.py
        run: python private_py/daddyliveevent/schedule_aljson.py

      - name: Run server_key_schedule.py
        run: python private_py/daddyliveevent/server_key_schedule.py

      - name: Run schedule_son.py
        run: python private_py/daddyliveevent/schedule_son.py

      - name: Run eventm3u.py
        run: python private_py/daddyliveevent/eventm3u.py

      - name: Run convertm3u.py
        run: python private_py/daddyliveevent/convertm3u.py

      # 7. event.m3u dosyasını doğrudan private repo'ya taşıyoruz
      - name: Copy m3u file to Private Repo
        run: |
          cp ../d/event.m3u .  # event.m3u dosyasını Py repo'suna taşıyoruz

      # 8. Değişiklikleri commit ve push ediyoruz
      - name: Commit and Push Changes to Private Repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add event.m3u  # event.m3u dosyasını commit etmek için ekliyoruz
          git commit -m "Update event.m3u data" || echo "No changes to commit"  # Commit mesajı
          git push origin main  # Değişiklikleri Py repo'suna push ediyoruz
