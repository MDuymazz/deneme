name: Run Python Scripts from Private Repo ( D )

on:
  schedule:
    - cron: '0 */1 * * *'  # Workflow her saat başı çalışacak
  workflow_dispatch:  # Manuel tetikleme

jobs:
  extract-schedule-data:
    runs-on: ubuntu-latest

    steps:
      # Ana repoyu çekiyoruz
      - name: Checkout repository
        uses: actions/checkout@v4

      # Python kurulumunu yapıyoruz
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Python 3.10 versiyonu

      # Bağımlılıkları yüklüyoruz
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4
          pip install playwright
          pip install bs4
          pip install lxml
          playwright install

      # Veriyi çıkaran Python betiğini çalıştırıyoruz
      - name: Run extraction script
        run: python d/livejson.py

      # Commit ve push işlemi
      - name: Commit and push if changes
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          git add -A  # Tüm değişiklikleri ekliyoruz
          git status
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update schedule data [skip ci]" && git push)

  run-python-scripts:
    needs: extract-schedule-data
    runs-on: ubuntu-latest

    steps:
      # Public repo'yu çekiyoruz
      - name: Checkout Public Repository (veriler)
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: main

      # Private repo'yu GH_TOKEN ile klonluyoruz
      - name: Checkout Private Repository (Py)
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: 'MDuymazz/Py'
          path: private_py

      # Private repo bağımlılıklarını yüklüyoruz
      - name: Install Python dependencies from private repo
        run: pip install -r private_py/requirements.txt

      # Python betiklerini çalıştırıyoruz
      - name: Run schedule_aljson.py
        run: python private_py/daddyliveevent/schedule_aljson.py

      - name: Run server_key_schedule.py
        run: python private_py/daddyliveevent/server_key_schedule.py

      - name: Run schedule_son.py
        run: python private_py/daddyliveevent/schedule_son.py

      - name: Run eventm3u.py
        run: python private_py/daddyliveevent/eventm3u.py

      - name: Run convertm3u.py
        run: python private_py/daddyliveevent/convertm3u.py

      # Tüm dosyaları commit ediyoruz
      - name: Commit All Changes to Public Repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -A  # Tüm dosyaları stage ediyoruz
          git commit -m "Update files" || echo "No changes to commit"  # Eğer değişiklik varsa commit ediyoruz
          git push origin main  # Public repo'ya push ediyoruz

      # Sadece .m3u dosyalarını Py repo'suna push ediyoruz
      - name: Commit and Push .m3u Files to Py Repo
        run: |
          # `MDuymazz/Py` repo'suna gitmek için GitHub token ile push yapıyoruz.
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Sadece .m3u dosyalarını stage ediyoruz
          git add *.m3u  # .m3u dosyalarını ekle

          # Değişiklikleri commit ediyoruz
          git commit -m "Update .m3u files" || echo "No changes to commit"  # Commit mesajı

          # `MDuymazz/Py` repo'suna sadece .m3u dosyalarını push ediyoruz
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/MDuymazz/Py.git main  # .m3u dosyalarını Py repo'suna push ediyoruz
